/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import Models.Entity.Monster;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 *
 * @author Maia
 */
public class MainMenuFrame extends javax.swing.JFrame
{

    private boolean buttonsEnabled = true;

    public MainMenuFrame()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        characterButton = new javax.swing.JButton();
        monsterButton = new javax.swing.JButton();
        combatButton = new javax.swing.JButton();
        optionsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dungeons and Dragons Aid");

        characterButton.setText("Character");
        characterButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                characterButtonMouseClicked(evt);
            }
        });

        monsterButton.setText("Monster");
        monsterButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                monsterButtonMouseClicked(evt);
            }
        });

        combatButton.setText("Combat");
        combatButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                combatButtonMouseClicked(evt);
            }
        });

        optionsButton.setText("Options");
        optionsButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                optionsButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(characterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(monsterButton, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(optionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(characterButton)
                    .addComponent(monsterButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combatButton)
                    .addComponent(optionsButton))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void characterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_characterButtonMouseClicked
        if (buttonsEnabled)
        {
            disableButtons();
            CharacterFrame frame = new CharacterFrame(this);
            frame.setLocationRelativeTo(this);
            frame.setVisible(true);
        }
    }//GEN-LAST:event_characterButtonMouseClicked

    private void monsterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monsterButtonMouseClicked

        if (buttonsEnabled)
        {
            disableButtons();
            MonsterFrame frame = new MonsterFrame(this);
            frame.setLocationRelativeTo(this);
            frame.setVisible(true);
        }

    }//GEN-LAST:event_monsterButtonMouseClicked

    private void combatButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combatButtonMouseClicked

        if (buttonsEnabled)
        {
            // this is test data
            List<Models.Entity.Character> characterList = new ArrayList();
            List<Monster> monsterList = new ArrayList();

            disableButtons();

            for (int i = 0; i < 5; i++)
            {
                Models.Entity.Character character = new Models.Entity.Character();
                character.getDescriptions().setName("Character " + i);
                character.setInitiative(new Random().nextInt(20) + 1);
                characterList.add(character);
            }

            for (int i = 0; i < 5; i++)
            {
                Monster monster = new Monster();
                monster.getDescriptions().setName("Monster " + i);
                monster.setInitiative(new Random().nextInt(20) + 1);
                monsterList.add(monster);
            }

            CombatFrame frame = new CombatFrame(characterList, monsterList, this);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        }
    }//GEN-LAST:event_combatButtonMouseClicked

    private void optionsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionsButtonMouseClicked

        if (buttonsEnabled)
        {
            disableButtons();
            OptionsFrame frame = new OptionsFrame(this);
            frame.setLocationRelativeTo(this);
            frame.setVisible(true);
        }
    }//GEN-LAST:event_optionsButtonMouseClicked

    public void disableButtons()
    {
        optionsButton.setEnabled(false);
        characterButton.setEnabled(false);
        monsterButton.setEnabled(false);
        combatButton.setEnabled(false);
        buttonsEnabled = false;
    }

    public void enableButtons()
    {
        optionsButton.setEnabled(true);
        characterButton.setEnabled(true);
        monsterButton.setEnabled(true);
        combatButton.setEnabled(true);
        buttonsEnabled = true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton characterButton;
    private javax.swing.JButton combatButton;
    private javax.swing.JButton monsterButton;
    private javax.swing.JButton optionsButton;
    // End of variables declaration//GEN-END:variables
}
